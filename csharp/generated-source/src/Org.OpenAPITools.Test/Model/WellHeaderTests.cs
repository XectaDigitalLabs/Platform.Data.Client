/*
 * Production API
 *
 * API exposing endpoints for managing well headers and daily production.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing WellHeader
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class WellHeaderTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for WellHeader
        //private WellHeader instance;

        public WellHeaderTests()
        {
            // TODO uncomment below to create an instance of WellHeader
            //instance = new WellHeader();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WellHeader
        /// </summary>
        [Fact]
        public void WellHeaderInstanceTest()
        {
            // TODO uncomment below to test "IsType" WellHeader
            //Assert.IsType<WellHeader>(instance);
        }


        /// <summary>
        /// Test the property 'Xid'
        /// </summary>
        [Fact]
        public void XidTest()
        {
            // TODO unit test for the property 'Xid'
        }
        /// <summary>
        /// Test the property 'Uwi'
        /// </summary>
        [Fact]
        public void UwiTest()
        {
            // TODO unit test for the property 'Uwi'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Group'
        /// </summary>
        [Fact]
        public void GroupTest()
        {
            // TODO unit test for the property 'Group'
        }
        /// <summary>
        /// Test the property 'Field'
        /// </summary>
        [Fact]
        public void FieldTest()
        {
            // TODO unit test for the property 'Field'
        }
        /// <summary>
        /// Test the property 'Route'
        /// </summary>
        [Fact]
        public void RouteTest()
        {
            // TODO unit test for the property 'Route'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Fluid'
        /// </summary>
        [Fact]
        public void FluidTest()
        {
            // TODO unit test for the property 'Fluid'
        }
        /// <summary>
        /// Test the property 'LiftType'
        /// </summary>
        [Fact]
        public void LiftTypeTest()
        {
            // TODO unit test for the property 'LiftType'
        }
        /// <summary>
        /// Test the property 'Lat'
        /// </summary>
        [Fact]
        public void LatTest()
        {
            // TODO unit test for the property 'Lat'
        }
        /// <summary>
        /// Test the property 'Lon'
        /// </summary>
        [Fact]
        public void LonTest()
        {
            // TODO unit test for the property 'Lon'
        }
        /// <summary>
        /// Test the property 'Version'
        /// </summary>
        [Fact]
        public void VersionTest()
        {
            // TODO unit test for the property 'Version'
        }

    }

}
